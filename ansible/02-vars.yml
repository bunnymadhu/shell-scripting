- name: Demo on variable #(play level)
  hosts: all
  vars:
    URL: play.example.com
  tasks:
    - name: print Variable
      debug:
        msg: URL = {{ URL }}
    - name: print variable from task #(task level)
      vars:
        URL: task.example.com
      debug:
        msg: URL = {{ URL }}

- name: Demo on variables from files
  hosts: all
  vars_files:
    - example-vars.yml
  tasks:
    - name: print variable from file
      debug:
        msg: URL = {{ URL }}

- name: Demo on variable from user input #(user level)
  hosts: all
  vars_prompt:
    - name: URL
      prompt: ENTER URL
      private: false             #(to display the what ever u type a msg--(no or false or true)its a boolean's)
  tasks:
    - name: print variable
      debug:
        msg: URL = {{ URL }}

- name: Demo on variable from inventory  #(vim inv URL=inventory.example.com) #(inventory level)
  hosts: all
  tasks:
    - name: print variable
      debug:
        msg: URL = {{ URL }}

## command  line inventory also very powerpull
## when u give URL=some madhu.example.com it will takes all over the script to madhu.example.com...
##  ansible-playbook -i inv -k 02-vars.yml -e URL=cli.exaample.com (here -e is very powerpull it takes all over the script to that example.com)

- name: Print fact  #(setup factsl)
  hosts: all
  tasks:
    - name: print fact
      debug:
        msg: python Version = {{ ansible_python_version }}

- name: Register a variable
  hosts: all
  tasks:
    - name: Grab how many users are logged in
      shell: who | wc -l
      register: output

    - name: print output
      debug:
        msg: Number of users logged in =  {{ output.stdout }} # first search output in that brackets a,d then output.stdout,nu have to understand in that.

    - name: Declare a Variable
      set_fact:
        NO_OF_USERS: "{{ output.stdout }}"

    - name:  print no of users from a new bar
      debug:
        msg: "{{ NO_OF_USERS }}"

## to avoid the passwoed evrytime replace of '-k'=ansible-playbook -i inv 02-vars.yml -e ansible_password=DevOps321
## -k=ask for password,-i=ti prevent the inv files,-m=module,-e=to allow the permission(to avoid the prompting)..



## Types of variables Pre-defined from user           ## highest priroity in the variables (priority=precedence)
## Play level variables                                           ## Command line variables
## Task leval variables(local level)                          ##  Task leval variables(local level)
## Command line variables                                    ##  Variable from a file
## Inventory file variables                                      ##  Play level variables
## Variable from a file                                           ##  Inventory file variables
